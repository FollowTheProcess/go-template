# https://taskfile.dev

version: "3"

vars:
  COV_DATA: coverage.out

tasks:
  default:
    desc: List all available tasks
    silent: true
    cmds: 
      - task --list

  tidy:
    desc: Tidy dependencies in go.mod and go.sum
    sources:
      - "**/*.go"
      - go.mod
      - go.sum
    cmds:
      - go mod tidy

  fmt:
    desc: Run go fmt on all source files
    sources:
      - "**/*.go"
    preconditions:
      - sh: command -v golines
        msg: golines not installed, see https://github.com/segmentio/golines
    cmds:
      - go fmt ./...
      - golines . --ignore-generated --write-output

  test:
    desc: Run the test suite
    sources:
      - "**/*.go"
    cmds: 
      - go test -race ./... {% raw %}{{ .CLI_ARGS }}{% endraw %}

  bench:
    desc: Run all project benchmarks
    sources:
      - "**/*.go"
    cmds: 
      - go test ./... -run None -benchmem -bench . {% raw %}{{ .CLI_ARGS }}{% endraw %}

  lint:
    desc: Run the linters and auto-fix if possible
    sources:
      - "**/*.go"
      - .golangci.yml
    cmds: 
      - golangci-lint run --fix
    preconditions:
      - sh: command -v golangci-lint
        msg: golangci-lint not installed, see https://golangci-lint.run/usage/install/#local-installation

  doc:
    desc: Render the pkg docs locally
    cmds:
      - pkgsite -open
    preconditions:
      - sh: command -v pkgsite
        msg: pkgsite not installed, run go install golang.org/x/pkgsite/cmd/pkgsite@latest

  cov:
    desc: Calculate test coverage and render the html
    generates:
      - {% raw %}"{{ .COV_DATA }}"{% endraw %}
    cmds:
      - go test -race -cover -covermode atomic -coverprofile {% raw %}{{ .COV_DATA }}{% endraw %} ./...
      - go tool cover -html {% raw %}{{ .COV_DATA }}{% endraw %}

  check:
    desc: Run tests and linting in one
    cmds:
      - task: test
      - task: lint

  sloc:
    desc: Print lines of code
    cmds: 
      - fd . -e go | xargs wc -l | sort -nr | head

  clean:
    desc: Remove build artifacts and other clutter
    cmds:
      - go clean ./...
      - rm -rf {% raw %}{{ .COV_DATA }}{% endraw %}

  update:
    desc: Updates dependencies in go.mod and go.sum
    cmds:
      - go get -u ./...
      - go mody tidy
